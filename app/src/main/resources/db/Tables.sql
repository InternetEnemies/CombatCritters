CREATE MEMORY TABLE PUBLIC.USERS(
       id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1,INCREMENT BY 1) PRIMARY KEY,
       username VARCHAR(255) NOT NULL UNIQUE,
       password VARCHAR(255) NOT NULL
       );
       
CREATE MEMORY TABLE PUBLIC.FRIENDS(
       userTx INT NOT NULL, 
       userRx INT NOT NULL, 
       PRIMARY KEY (userTx, userRx), 
       FOREIGN KEY (userTx) REFERENCES USERS(id), 
       FOREIGN KEY (userRx) REFERENCES USERS(id)
       );
       
CREATE MEMORY TABLE PUBLIC.DECKS(
       userId INTEGER, 
       id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1,INCREMENT BY 1) PRIMARY KEY,
       name VARCHAR(255) NOT NULL, 
       FOREIGN KEY (userId) REFERENCES USERS(id)
       );
       
CREATE MEMORY TABLE PUBLIC.PROFILES(
       userId INT NOT NULL PRIMARY KEY, 
       deckId INT, 
       FOREIGN KEY (userId) REFERENCES USERS(id), 
       FOREIGN KEY (deckId) REFERENCES DECKS(id)
       );
-- Cards
CREATE MEMORY TABLE PUBLIC.CARDS(
       id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,
       name VARCHAR(255) NOT NULL,
       image VARCHAR(255),
       playCost INTEGER,
       rarity INTEGER,
       type VARCHAR(20),
       damage INTEGER,
       health INTEGER,
       effectId INTEGER
       );
       
CREATE MEMORY TABLE PUBLIC.PACKS(
       id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,
       name VARCHAR(255) NOT NULL,
       image VARCHAR(255) NOT NULL
       );
       
CREATE MEMORY TABLE PUBLIC.PACKCARDS(
       packId INT NOT NULL,
       cardId INT NOT NULL, 
       FOREIGN KEY (packID) REFERENCES PACKS(id), 
       FOREIGN KEY (cardId) REFERENCES CARDS(id)
       );
       
CREATE MEMORY TABLE PUBLIC.CARDSLOT(
       packId INT NOT NULL,
       position INT NOT NULL, 
       common DOUBLE NOT NULL, 
       uncommon DOUBLE NOT NULL, 
       rare DOUBLE NOT NULL, 
       epic DOUBLE NOT NULL, 
       legend DOUBLE NOT NULL, 
       FOREIGN KEY (packId) REFERENCES PACKS(id)
       );
       
CREATE MEMORY TABLE PUBLIC.DECKCARDS(
       deckId INT NOT NULL,
       cardId INT NOT NULL,
       position INT NOT NULL,
       PRIMARY KEY (deckid,position),
       FOREIGN KEY (deckId) REFERENCES Decks(id),
       FOREIGN KEY (cardId) REFERENCES Cards(id)
       );
       
CREATE MEMORY TABLE PUBLIC.CARDINVENTORY(
       userId INT NOT NULL, 
       cardId INT NOT NULL, 
       amount INT NOT NULL, 
       PRIMARY KEY (cardId,userId), 
       FOREIGN KEY (cardId) REFERENCES Cards(id), 
       FOREIGN KEY (userId) REFERENCES USERS(id)
       );
       
CREATE MEMORY TABLE PUBLIC.PACKINVENTORY(
       packId INT NOT NULL, 
       amount INT NOT NULL, 
       PRIMARY KEY (packId), 
       FOREIGN KEY (packId) REFERENCES Packs(id)
       );
       
CREATE MEMORY TABLE PUBLIC.TRANSACTIONS (
       id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY, 
       type VARCHAR(255) NOT NULL
       );
       
CREATE MEMORY TABLE PUBLIC.TRANSACTIONITEM (
       tid INT NOT NULL,
       type VARCHAR(255) NOT NULL,
       recv BIT,
       packId INT,
       cardId INT,
       currency INT,
       amount INT, 
       FOREIGN KEY (tid) REFERENCES TRANSACTIONS(id), 
       FOREIGN KEY (packId) REFERENCES PACKS(id), 
       FOREIGN KEY (cardId) REFERENCES CARDS(id)
       );
       
CREATE MEMORY TABLE PUBLIC.MARKETDISCOUNTS (
       tid INT NOT NULL,
       discount DOUBLE, 
       FOREIGN KEY (tid) REFERENCES TRANSACTIONS(id)
       );
       
CREATE MEMORY TABLE PUBLIC.PLAYERINFO (
       id INT NOT NULL, 
       balance INT NOT NULL, 
       PRIMARY KEY (id)
       );
       
CREATE MEMORY TABLE PUBLIC.BATTLEINFO (
       id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1), 
       NAME VARCHAR(255) NOT NULL, 
       DESCRIPTION VARCHAR(255) NOT NULL, 
       IMAGE VARCHAR(255), 
       REWARDSID INT NOT NULL, 
       PRIMARY KEY(id), 
       FOREIGN KEY (REWARDSID) REFERENCES TRANSACTIONS(id)
       );
       
CREATE MEMORY TABLE PUBLIC.TRADEINFO (
       tid INT NOT NULL, 
       name VARCHAR(255), 
       image VARCHAR(255), 
       FOREIGN KEY (tid) REFERENCES TRANSACTIONS(id)
       );